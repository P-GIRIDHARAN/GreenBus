# Generated by Django 5.1.6 on 2025-03-03 06:02

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('busCompany', models.CharField(max_length=20)),
                ('noOfBuses', models.PositiveIntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='BusModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('busNo', models.PositiveIntegerField(unique=True)),
                ('totalSeats', models.PositiveIntegerField(default=40)),
                ('availableSeats', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, default=list, size=None)),
                ('bookedSeats', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, default=list, size=None)),
                ('fromWhere', models.CharField(max_length=20)),
                ('toWhere', models.CharField(max_length=20)),
                ('perSeatPrice', models.PositiveIntegerField(default=500)),
                ('boardingTime', models.CharField(choices=[('Morning', '9AM'), ('Night', '9PM')], max_length=10)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('busCompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GreenBus_App.companymodel')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RouteModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stopName', models.CharField(max_length=50)),
                ('stopOrder', models.PositiveIntegerField()),
                ('bookedSeats', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, default=list, size=None)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='GreenBus_App.busmodel')),
            ],
            options={
                'ordering': ['stopOrder'],
            },
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customerId', models.CharField(max_length=20, unique=True)),
                ('age', models.PositiveIntegerField()),
                ('phone_number', models.CharField(max_length=15)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='GreenBus_App.customuser')),
            ],
        ),
        migrations.CreateModel(
            name='TicketModel',
            fields=[
                ('ticketId', models.AutoField(primary_key=True, serialize=False)),
                ('seatNumbers', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, default=list, size=None)),
                ('fromStop', models.CharField(max_length=50)),
                ('toStop', models.CharField(max_length=50)),
                ('ticketPrice', models.PositiveIntegerField(default=0, editable=False)),
                ('bookingDate', models.DateField(auto_now_add=True)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GreenBus_App.busmodel')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GreenBus_App.usermodel')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentStatus', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Cancelled', 'Cancelled')], default='Pending', max_length=10)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GreenBus_App.ticketmodel')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GreenBus_App.usermodel')),
            ],
        ),
    ]
